@model Aptitude.Models.Question
@{
    ViewBag.Title = "Create";
    List<Aptitude.Models.Category> CategoryList = ViewBag.Categories as List<Aptitude.Models.Category>;
}
<h2>Create</h2>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

   

    <div class="form-horizontal">
        <h4>Question</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Directions, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Directions, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Directions, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Query, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Query, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Query, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Tags, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Tags, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Tags, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("LabelCategory","Category", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                
                    @for (int i = 0; i < CategoryList.Count; i++)
                {

                       
                        @Html.ValueFor(model=>model.Category[i].Id,@CategoryList.ElementAt(i).Id.ToString())
                        @Html.CheckBoxFor(model => model.Category[i].IsIncluded)
                        @Html.Label("lblCategry",CategoryList.ElementAt(i).Name)
                        @:<hr />
                }
                
        </div>
    </div>
        <div class="form-group">
                        @Html.LabelFor(model => model.NumberOfOptions, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(model => model.NumberOfOptions, new { htmlAttributes = new { @class = "form-control", @id = "txtNumberOfOptions" } })
                            @Html.ValidationMessageFor(model => model.NumberOfOptions, "", new { @class = "text-danger" })
                            
                        </div>
                    </div>
        <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Create" class="btn btn-default" />

                        </div>
                    </div>
     </div>
                }
                <div>
                    @Html.ActionLink("Back to List", "Index")
                </div>

                @section Scripts {
                    @Scripts.Render("~/bundles/jqueryval")
                }
